{
    "sourceFile": ".eslintrc.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1677205090785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1677205111809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,26 @@\n module.exports = {\r\n-  parser: \"@typescript-eslint/parser\", // 指定ESLint要使用的解析器\r\n+  parser: '@typescript-eslint/parser',  // 指定ESLint要使用的解析器\r\n   parserOptions: {\r\n-    ecmaVersion: 2020, // 允许解析较新的ES特性\r\n-    sourceType: \"module\",\r\n+    ecmaVersion: 2020,    // 允许解析较新的ES特性\r\n+    sourceType: 'module',\r\n     ecmaFeatures: {\r\n-      jsx: true, // 允许解析JSX\r\n-    },\r\n+      jsx: true   // 允许解析JSX\r\n+    }\r\n   },\r\n   settings: {\r\n     react: {\r\n-      version: \"detect\", // 告诉eslint-plugin-react自动检测要使用的React版本\r\n-    },\r\n+      version: 'detect' // 告诉eslint-plugin-react自动检测要使用的React版本\r\n+    }\r\n   },\r\n   extends: [\r\n-    \"plugin:react/recommended\", // 使用eslint-plugin-react的推荐规则\r\n-    \"plugin:@typescript-eslint/recommended\", // 使用@typescript-eslint/eslint-plugin的推荐规则\r\n+    'plugin:react/recommended',   // 使用eslint-plugin-react的推荐规则\r\n+    'plugin:@typescript-eslint/recommended' // 使用@typescript-eslint/eslint-plugin的推荐规则\r\n+    \"prettier/@typescript-eslint\",  // 使用eslint-config-prettier来禁用@typescript-eslint/eslint-plugin中与prettier冲突的ESLint规则\r\n+    // 启用eslint-plugin-prettier和eslint-config-prettier。这会将prettier错误作为ESLint错误来展示。确保这个配置放到数组的最后。\r\n+    \"plugin:prettier/recommended\"\r\n   ],\r\n   rules: {\r\n     // 防止自定义的ESLint规则，可以覆盖extends中的规则配置。\r\n     // e.g. \"@typescript-eslint/explicit-function-return-type\": \"off\",\r\n-  },\r\n-};\r\n+  }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677205132322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,5 +22,5 @@\n   rules: {\r\n     // 防止自定义的ESLint规则，可以覆盖extends中的规则配置。\r\n     // e.g. \"@typescript-eslint/explicit-function-return-type\": \"off\",\r\n   }\r\n-};\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1677205140403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     }\r\n   },\r\n   extends: [\r\n     'plugin:react/recommended',   // 使用eslint-plugin-react的推荐规则\r\n-    'plugin:@typescript-eslint/recommended' // 使用@typescript-eslint/eslint-plugin的推荐规则\r\n+    'plugin:@typescript-eslint/recommended', // 使用@typescript-eslint/eslint-plugin的推荐规则\r\n     \"prettier/@typescript-eslint\",  // 使用eslint-config-prettier来禁用@typescript-eslint/eslint-plugin中与prettier冲突的ESLint规则\r\n     // 启用eslint-plugin-prettier和eslint-config-prettier。这会将prettier错误作为ESLint错误来展示。确保这个配置放到数组的最后。\r\n     \"plugin:prettier/recommended\"\r\n   ],\r\n"
                },
                {
                    "date": 1677205541409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n module.exports = {\r\n-  parser: '@typescript-eslint/parser',  // 指定ESLint要使用的解析器\r\n+  parser: 'vue-eslint-parser',  // 指定ESLint要使用的解析器\r\n   parserOptions: {\r\n     ecmaVersion: 2020,    // 允许解析较新的ES特性\r\n     sourceType: 'module',\r\n     ecmaFeatures: {\r\n"
                },
                {
                    "date": 1677205568938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n module.exports = {\r\n   parser: 'vue-eslint-parser',  // 指定ESLint要使用的解析器\r\n   parserOptions: {\r\n+    parser: '@typescript-eslint/parser',\r\n     ecmaVersion: 2020,    // 允许解析较新的ES特性\r\n     sourceType: 'module',\r\n     ecmaFeatures: {\r\n       jsx: true   // 允许解析JSX\r\n"
                },
                {
                    "date": 1677205581091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,82 @@\n+// eslint-disable-next-line @typescript-eslint/no-var-requires\r\n+const path = require('path')\r\n+\r\n module.exports = {\r\n-  parser: 'vue-eslint-parser',  // 指定ESLint要使用的解析器\r\n+  root: true,\r\n+  parser: 'vue-eslint-parser',\r\n   parserOptions: {\r\n+    // Parser that checks the content of the <script> tag\r\n     parser: '@typescript-eslint/parser',\r\n-    ecmaVersion: 2020,    // 允许解析较新的ES特性\r\n     sourceType: 'module',\r\n+    ecmaVersion: 2020,\r\n+    jsxPragma: 'vue',\r\n     ecmaFeatures: {\r\n-      jsx: true   // 允许解析JSX\r\n+      jsx: true\r\n     }\r\n   },\r\n+  env: {\r\n+    'browser': true,\r\n+    'node': true,\r\n+    'vue/setup-compiler-macros': true\r\n+  },\r\n+  plugins: ['@typescript-eslint', 'eslint-plugin-import'],\r\n+  extends: [\r\n+    // Airbnb JavaScript Style Guide https://github.com/airbnb/javascript\r\n\\ No newline at end of file\n+    'airbnb-base',\r\n+    'plugin:@typescript-eslint/recommended',\r\n+    'plugin:import/recommended',\r\n+    'plugin:import/typescript',\r\n+    'plugin:vue/vue3-recommended',\r\n+    'plugin:prettier/recommended'\r\n+    // 'src/types/.auto-imports.json'\r\n+  ],\r\n   settings: {\r\n-    react: {\r\n-      version: 'detect' // 告诉eslint-plugin-react自动检测要使用的React版本\r\n+    'import/parsers': {\r\n+      '@typescript-eslint/parser': ['.ts', '.tsx']\r\n+    },\r\n+    'import/resolver': {\r\n+      typescript: {\r\n+        project: path.resolve(__dirname, './tsconfig.json')\r\n+      },\r\n+      node: {\r\n+        extensions: ['.js', '.jsx']\r\n+      }\r\n     }\r\n   },\r\n-  extends: [\r\n-    'plugin:react/recommended',   // 使用eslint-plugin-react的推荐规则\r\n-    'plugin:@typescript-eslint/recommended', // 使用@typescript-eslint/eslint-plugin的推荐规则\r\n-    \"prettier/@typescript-eslint\",  // 使用eslint-config-prettier来禁用@typescript-eslint/eslint-plugin中与prettier冲突的ESLint规则\r\n-    // 启用eslint-plugin-prettier和eslint-config-prettier。这会将prettier错误作为ESLint错误来展示。确保这个配置放到数组的最后。\r\n-    \"plugin:prettier/recommended\"\r\n-  ],\r\n   rules: {\r\n-    // 防止自定义的ESLint规则，可以覆盖extends中的规则配置。\r\n-    // e.g. \"@typescript-eslint/explicit-function-return-type\": \"off\",\r\n+    'prettier/prettier': 0,\r\n+    // Vue: Recommended rules to be closed or modify\r\n+    'vue/require-default-prop': 0,\r\n+    'vue/singleline-html-element-content-newline': 0,\r\n+    'vue/max-attributes-per-line': 0,\r\n+    // Vue: Add extra rules\r\n+    'vue/custom-event-name-casing': [2, 'camelCase'],\r\n+    'vue/no-v-text': 1,\r\n+    'vue/padding-line-between-blocks': 1,\r\n+    'vue/require-direct-export': 1,\r\n+    'vue/multi-word-component-names': 0,\r\n+    // Allow @ts-ignore comment\r\n+    '@typescript-eslint/ban-ts-comment': 0,\r\n+    '@typescript-eslint/no-unused-vars': 1,\r\n+    '@typescript-eslint/no-empty-function': 1,\r\n+    '@typescript-eslint/no-explicit-any': 0,\r\n+    'import/extensions': [\r\n+      2,\r\n+      'ignorePackages',\r\n+      {\r\n+        js: 'never',\r\n+        jsx: 'never',\r\n+        ts: 'never',\r\n+        tsx: 'never'\r\n+      }\r\n+    ],\r\n+    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,\r\n+    'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',\r\n+    'no-param-reassign': 0,\r\n+    'prefer-regex-literals': 0,\r\n+    'import/no-extraneous-dependencies': 0,\r\n+    'import/no-unresolved': 0,\r\n+    'no-undef': 0,\r\n+    'no-shadow': 0\r\n   }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1677205933663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,82 +1,26 @@\n-// eslint-disable-next-line @typescript-eslint/no-var-requires\r\n-const path = require('path')\r\n-\r\n module.exports = {\r\n-  root: true,\r\n-  parser: 'vue-eslint-parser',\r\n+  parser: '@typescript-eslint/parser',  // 指定ESLint要使用的解析器\r\n   parserOptions: {\r\n-    // Parser that checks the content of the <script> tag\r\n-    parser: '@typescript-eslint/parser',\r\n+    ecmaVersion: 2020,    // 允许解析较新的ES特性\r\n     sourceType: 'module',\r\n-    ecmaVersion: 2020,\r\n-    jsxPragma: 'vue',\r\n     ecmaFeatures: {\r\n-      jsx: true\r\n+      jsx: true   // 允许解析JSX\r\n     }\r\n   },\r\n-  env: {\r\n-    'browser': true,\r\n-    'node': true,\r\n-    'vue/setup-compiler-macros': true\r\n+  settings: {\r\n+    react: {\r\n+      version: 'detect' // 告诉eslint-plugin-react自动检测要使用的React版本\r\n+    }\r\n   },\r\n-  plugins: ['@typescript-eslint', 'eslint-plugin-import'],\r\n   extends: [\r\n-    // Airbnb JavaScript Style Guide https://github.com/airbnb/javascript\r\n-    'airbnb-base',\r\n-    'plugin:@typescript-eslint/recommended',\r\n-    'plugin:import/recommended',\r\n-    'plugin:import/typescript',\r\n-    'plugin:vue/vue3-recommended',\r\n-    'plugin:prettier/recommended'\r\n-    // 'src/types/.auto-imports.json'\r\n+    'plugin:react/recommended',   // 使用eslint-plugin-react的推荐规则\r\n+    'plugin:@typescript-eslint/recommended' // 使用@typescript-eslint/eslint-plugin的推荐规则\r\n+    \"prettier/@typescript-eslint\",  // 使用eslint-config-prettier来禁用@typescript-eslint/eslint-plugin中与prettier冲突的ESLint规则\r\n+    // 启用eslint-plugin-prettier和eslint-config-prettier。这会将prettier错误作为ESLint错误来展示。确保这个配置放到数组的最后。\r\n+    \"plugin:prettier/recommended\"\r\n   ],\r\n-  settings: {\r\n-    'import/parsers': {\r\n-      '@typescript-eslint/parser': ['.ts', '.tsx']\r\n-    },\r\n-    'import/resolver': {\r\n-      typescript: {\r\n-        project: path.resolve(__dirname, './tsconfig.json')\r\n-      },\r\n-      node: {\r\n-        extensions: ['.js', '.jsx']\r\n-      }\r\n-    }\r\n-  },\r\n   rules: {\r\n-    'prettier/prettier': 0,\r\n-    // Vue: Recommended rules to be closed or modify\r\n-    'vue/require-default-prop': 0,\r\n-    'vue/singleline-html-element-content-newline': 0,\r\n-    'vue/max-attributes-per-line': 0,\r\n-    // Vue: Add extra rules\r\n-    'vue/custom-event-name-casing': [2, 'camelCase'],\r\n-    'vue/no-v-text': 1,\r\n-    'vue/padding-line-between-blocks': 1,\r\n-    'vue/require-direct-export': 1,\r\n-    'vue/multi-word-component-names': 0,\r\n-    // Allow @ts-ignore comment\r\n-    '@typescript-eslint/ban-ts-comment': 0,\r\n-    '@typescript-eslint/no-unused-vars': 1,\r\n-    '@typescript-eslint/no-empty-function': 1,\r\n-    '@typescript-eslint/no-explicit-any': 0,\r\n-    'import/extensions': [\r\n-      2,\r\n-      'ignorePackages',\r\n-      {\r\n-        js: 'never',\r\n-        jsx: 'never',\r\n-        ts: 'never',\r\n-        tsx: 'never'\r\n\\ No newline at end of file\n-      }\r\n-    ],\r\n-    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,\r\n-    'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',\r\n-    'no-param-reassign': 0,\r\n-    'prefer-regex-literals': 0,\r\n-    'import/no-extraneous-dependencies': 0,\r\n-    'import/no-unresolved': 0,\r\n-    'no-undef': 0,\r\n-    'no-shadow': 0\r\n+    // 防止自定义的ESLint规则，可以覆盖extends中的规则配置。\r\n+    // e.g. \"@typescript-eslint/explicit-function-return-type\": \"off\",\r\n   }\r\n-}\n+};\n\\ No newline at end of file\n"
                }
            ],
            "date": 1677205090785,
            "name": "Commit-0",
            "content": "module.exports = {\r\n  parser: \"@typescript-eslint/parser\", // 指定ESLint要使用的解析器\r\n  parserOptions: {\r\n    ecmaVersion: 2020, // 允许解析较新的ES特性\r\n    sourceType: \"module\",\r\n    ecmaFeatures: {\r\n      jsx: true, // 允许解析JSX\r\n    },\r\n  },\r\n  settings: {\r\n    react: {\r\n      version: \"detect\", // 告诉eslint-plugin-react自动检测要使用的React版本\r\n    },\r\n  },\r\n  extends: [\r\n    \"plugin:react/recommended\", // 使用eslint-plugin-react的推荐规则\r\n    \"plugin:@typescript-eslint/recommended\", // 使用@typescript-eslint/eslint-plugin的推荐规则\r\n  ],\r\n  rules: {\r\n    // 防止自定义的ESLint规则，可以覆盖extends中的规则配置。\r\n    // e.g. \"@typescript-eslint/explicit-function-return-type\": \"off\",\r\n  },\r\n};\r\n"
        }
    ]
}